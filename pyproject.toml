[project]
name = "api-books-tc"
version = "0.1.0"
description = ""
authors = [
    {name = "Marcio",email = "marciocad@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.9,<4.0"
dependencies = [
    "fastapi[standard] (>=0.115.13,<0.116.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "pandas (>=2.3.0,<3.0.0)",
    "sqlalchemy (>=2.0.41,<3.0.0)",
    "aiohttp (>=3.12.13,<4.0.0)",
    "aiohttp-retry (>=2.9.1,<3.0.0)",
    "bs4 (>=0.0.2,<0.0.3)",
    "alembic (>=1.16.2,<2.0.0)"
]

[tool.poetry]
packages = [{include = "api_books_tc", from = "src"}]


[tool.pytest.ini_options]
pythonpath = "src"
addopts = '-p no:warnings'
asyncio_default_fixture_loop_scope = 'function'


[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
taskipy = "^1.14.1"
ruff = "^0.12.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 99
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT', 'FAST']

[tool.ruff.lint.per-file-ignores]
"tests/conftest.py" = ["F401"]  # F401 = imported but unused

[tool.ruff.format]
preview = true
quote-style = 'single'


[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev src/api_books_tc/main.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_zero -vv'
post_test = 'coverage html'

[tool.coverage.run]
concurrency = ["thread", "greenlet"]